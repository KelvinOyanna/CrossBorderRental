{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.1", "generated_at": "2024-11-10T05:22:31.936434Z", "invocation_id": "c8bf579f-30d3-4aa2-89c5-843c32b50ac9", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-10T05:22:31.766130Z", "completed_at": "2024-11-10T05:22:31.776270Z"}, {"name": "execute", "started_at": "2024-11-10T05:22:31.778015Z", "completed_at": "2024-11-10T05:22:31.907744Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14644193649291992, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.crossborder.bottom_five_customer_base_by_country", "compiled": true, "compiled_code": "with final as (select cntry.country, count(customer_id) as customers\nfrom country cntry\ninner join city on cntry.country_id = city.country_id\ninner join address addr on city.city_id = addr.city_id\ninner join customer cstmr on addr.address_id = cstmr.address_id\ngroup by cntry.country\norder by customers\nlimit 5)\n\nselect *\nfrom final", "relation_name": "\"dvdrental\".\"transformation\".\"bottom_five_customer_base_by_country\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-10T05:22:31.775017Z", "completed_at": "2024-11-10T05:22:31.797886Z"}, {"name": "execute", "started_at": "2024-11-10T05:22:31.804941Z", "completed_at": "2024-11-10T05:22:31.915960Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.15106511116027832, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.crossborder.top_5_volume_of_sales_by_country", "compiled": true, "compiled_code": "with sales_by_country as (\n    select distinct (country.country) country, \n    sum(payment.amount) as total_sales,\n    count(customer.customer_id) as total_customers\nfrom country\njoin city \non country.country_id = city.country_id\njoin address\non city.city_id = address.city_id\njoin customer\non address.address_id = customer.address_id\njoin payment\non customer.customer_id = payment.customer_id\ngroup by country\norder by total_sales desc, total_customers desc\nlimit 5\n)\n\nselect *\nfrom sales_by_country", "relation_name": "\"dvdrental\".\"transformation\".\"top_5_volume_of_sales_by_country\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-10T05:22:31.773714Z", "completed_at": "2024-11-10T05:22:31.802100Z"}, {"name": "execute", "started_at": "2024-11-10T05:22:31.807391Z", "completed_at": "2024-11-10T05:22:31.917313Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1539621353149414, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.crossborder.top_5_in_demand_genres", "compiled": true, "compiled_code": "with genre_movie_demand as (\n    select \n        category.name as genre,\n        count(customer.customer_id) as total_rent_demand,\n        sum(payment.amount) as total_sales\n    from category\n    join film_category\n    using(category_id)\n    join film\n    using(film_id)\n    join inventory\n    using(film_id)\n    join rental \n    on inventory.inventory_id = rental.inventory_id\n    join customer \n    on rental.customer_id = customer.customer_id\n    join payment\n    on rental.rental_id = payment.rental_id\n    group by category.category_id, category.name\n    order by total_rent_demand desc, total_sales desc\n    limit 5\n)\n\nselect *\nfrom genre_movie_demand", "relation_name": "\"dvdrental\".\"transformation\".\"top_5_in_demand_genres\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-10T05:22:31.776547Z", "completed_at": "2024-11-10T05:22:31.807095Z"}, {"name": "execute", "started_at": "2024-11-10T05:22:31.810946Z", "completed_at": "2024-11-10T05:22:31.917981Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.15369796752929688, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.crossborder.top_loyal_customers", "compiled": true, "compiled_code": "with customer_activity as (\nselect \n    customer.first_name,\n    customer.last_name,\n    concat(country.country, ' | ', city.city, ', ', address.address) as customer_address,\n    count(payment.rental_id) as no_of_rentals,\n    sum(payment.amount) as total_amount_paid\nfrom rental\njoin customer\nusing(customer_id)\njoin payment\nusing(customer_id)\nleft join address \nusing(address_id)\nleft join city\nusing(city_id)\nleft join country\nusing (country_id)\ngroup by 1, 2, 3\norder by total_amount_paid desc\n)\n\nselect *\nfrom customer_activity", "relation_name": "\"dvdrental\".\"transformation\".\"top_loyal_customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-10T05:22:31.771821Z", "completed_at": "2024-11-10T05:22:31.777700Z"}, {"name": "execute", "started_at": "2024-11-10T05:22:31.802433Z", "completed_at": "2024-11-10T05:22:31.921321Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1586928367614746, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.crossborder.rental_perfomance", "compiled": true, "compiled_code": "with days_difference as (\n    select inventory_id,\n    date_part('day', return_date - rental_date) as date_difference\n    from rental\n    ),\n\nfinal as (\n    select film.film_id,\n        case when date_difference < rental_duration then 'Returned early'\n        when date_difference = rental_duration then 'Returned on time'\n        else 'Returned late'\n        end AS return_status\n    from film\n    join inventory\n    using(film_id)\n    join days_difference\n    USING(inventory_id)\n    )\n\nselect \n    return_status, \n    count(film_id) total_films\nfrom final\ngroup by return_status", "relation_name": "\"dvdrental\".\"transformation\".\"rental_perfomance\""}], "elapsed_time": 0.3471240997314453, "args": {"warn_error_options": {"include": [], "exclude": []}, "strict_mode": false, "partial_parse_file_diff": true, "project_dir": "/Users/kelvin/Documents/DBTProjects/CrossBorderRental", "send_anonymous_usage_stats": true, "macro_debugging": false, "populate_cache": true, "empty": false, "log_level": "info", "print": true, "select": [], "enable_legacy_logger": false, "log_level_file": "debug", "exclude": [], "use_colors": true, "quiet": false, "defer": false, "version_check": true, "cache_selected_only": false, "profiles_dir": "/Users/kelvin/.dbt", "indirect_selection": "eager", "show_resource_report": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format_file": "debug", "partial_parse": true, "introspect": true, "require_resource_names_without_spaces": false, "static_parser": true, "use_colors_file": true, "log_path": "/Users/kelvin/Documents/DBTProjects/CrossBorderRental/logs", "vars": {}, "invocation_command": "dbt run", "which": "run", "write_json": true, "printer_width": 80, "log_format": "default", "favor_state": false, "log_file_max_bytes": 10485760, "source_freshness_run_project_hooks": false}}